{# >>> Comp Defaults #}
{% set compDefaults = {
  data: {
    name: 'c-switcherTheme',
    variantPosition: 'bottom',
    themes: [
      {name: 'Default', handle: 'default'},
      {name: 'Monochrome', handle: 'monochrome'},
      {name: 'Blue', handle: 'blue'},
      {name: 'Red', handle: 'red'},
      {name: 'Purple', handle: 'purple'},
    ]
  },
  classes: {
    root: 'flex justify-center',
    custom: '',
    button: 'a11y-keyboard-focus rounded-md bg-white px-5 py-2.5 shadow',
    panel: 'absolute right-0 mt-2 w-40 rounded bg-white shadow-md',
    listButton: 'a11y-keyboard-focus block w-full rounded-md px-4 py-2 text-left text-sm hover:bg-gray-50 disabled:text-gray-500'
  },
} %}

{# >>> Merge data / classes / variants (optional) #}
{% set props = {
  data: data is defined and data is iterable ? compDefaults.data | merge(data) : compDefaults.data,
  classes: classes is defined and classes is iterable ? compDefaults.classes | merge(classes) : compDefaults.classes,
} %}

<div alpinejs class="{{ props.data.name }} {{ props.classes.root }} {{ props.classes.custom }}">
  <div
    x-data="{
            theme: $persist('default'),
            open: false,
            toggle() {
                if (this.open) {
                    return this.close()
                }

                this.$refs.button.focus()

                this.open = true
            },
            close(focusAfter) {
                if (! this.open) return

                this.open = false

                focusAfter && focusAfter.focus()
            }
        }"
    x-on:keydown.escape.prevent.stop="close($refs.button)"
    x-on:focusin.window="! $refs.panel.contains($event.target) && close()"
    x-init="document.documentElement.dataset.theme = theme"
    x-id="['dropdown-button']"
    class="relative"
  >
    <!-- Button -->
    <button
      x-ref="button"
      x-on:click="toggle()"
      :aria-expanded="open"
      :aria-controls="$id('dropdown-button')"
      type="button"
      class="{{ props.classes.button }}"
    >
      <span x-text="theme" class="capitalize" />
      <span aria-hidden="true">&darr;</span>
    </button>

    <!-- Panel -->
    <div
      x-ref="panel"
      x-show="open"
      x-transition.origin.top.right
      x-on:click.outside="close($refs.button)"
      x-on:click="close($refs.button)"
      :id="$id('dropdown-button')"
      style="display: none;"
      class="{{ props.classes.panel }}"
    >
      <div>
        {% for theme in props.data.themes %}
          <button
            x-on:click="theme = '{{ theme.handle }}'; document.documentElement.dataset.theme = '{{ theme.handle }}';"
            class="{{ props.classes.listButton }}" >
            {{ theme.name }}
          </button>
        {% endfor %}
      </div>
    </div>
  </div>
</div>
