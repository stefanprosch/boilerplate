{# >>> Comp Defaults #}
{% set compDefaults = {
  data: {
    name: 'c-sliderImages',
    slides: null,
    aspectRatio: 'aspect-landscape',
    destroyBreakpoint: null,
    slidesPerView: null
  },
  classes: {
    root: 'overflow-hidden',
    custom: '',
    swiperSlide: 'swiper-slide',
    swiperWrapper: '',
  },
  variants: {
    aspectRatio: {
      'aspect-landscape': 'aspect-landscape',
      'aspect-portrait': 'aspect-portrait',
      'aspect-square': 'aspect-square',
      'aspect-auto': 'aspect-auto',
    }
  }
} %}

  {# >>> Merge data / classes / variants (optional) #}
  {% set props = {
    data: data is defined and data is iterable ? compDefaults.data | merge(data) : compDefaults.data,
    classes: classes is defined and classes is iterable ? compDefaults.classes | merge(classes) : compDefaults.classes,
    variants: compDefaults.variants,
  } %}

  {# Component #}
<div class="{{ props.data.name }} {{ props.classes.root }} {{ props.classes.custom }}">
  {# >>> Embed Swiper Holder #}
  {% embed "_components/slider/swiperHolder.twig" with {
    data: {
      slides: props.data.slides ??? null,
      aspectRatio: props.data.aspectRatio,
      destroyBreakpoint: props.data.destroyBreakpoint ??? null,
      slidesPerView: props.data.slidesPerView,
      swiperConfig: {
        init: false,
        freeMode: {
          sticky: true
        },
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev"
        },
        scrollbar: {
          el: ".swiper-scrollbar",
          draggable: true,
          hide: true
        },
        slidesPerView: props.data.slidesPerView ??? 'auto',
        spaceBetween: 16,
        breakpoints: {
          768: {
            spaceBetween: 32,
          },
          1024: {
            spaceBetween: 32,
          }
        },
        grabCursor: true,
        simulateTouch: true,
        watchSlidesProgress: true,
        watchSlidesVisibility: true
      }
    },
    classes: props.classes,
    variants: props.variants
  } only %}
    {# >>> Render slides #}
    {% block swiperSlides %}
      {% for image in props.data.slides %}
        <div class="{{ props.classes.swiperSlide }} {{ props.data.slidesPerView ? '' : '!w-11/12 sm:!w-5/12' }} {{ props.variants.aspectRatio[props.data.aspectRatio] }}">
                    {{ include('_components/image/image.twig', {
            data: {
              image: image ??? null,
              aspectRatio: props.data.aspectRatio,
              lazy: false
            }
          }, withContext = false) }}
        </div>
      {% endfor %}
    {% endblock %}
  {% endembed %}
</div>
