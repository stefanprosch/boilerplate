{# >>> Comp Defaults #}
{% set compDefaults = {
  data: {
    name: 'c-listEntries',
    slides: null,
    destroyBreakpoint: null
  },
  classes: {
    root: '',
    custom: '',
    contentWrapper: 'group grid grid-cols-1 md:grid-cols-2 gap-8 md:space-y-0 items-center',
  }
} %}

{# >>> Merge data / classes / variants (optional) #}
{% set props = {
  data: data is defined and data is iterable ? compDefaults.data | merge(data) : compDefaults.data,
  classes: classes is defined and classes is iterable ? compDefaults.classes | merge(classes) : compDefaults.classes,
} %}

{# Component #}
<div class="{{ props.data.name }} {{ props.classes.root }} {{ props.classes.custom }}">
  {% for item in props.data.slides %}
    <div class="{{ props.classes.contentWrapper }}">
      <div class="order-2 md:order-1 md:group-even:order-2 col-span-1 md:text-right md:group-even:text-left">
        {{ include('_components/text/textBlockHeadline.twig', {
          data: {
            headline: item.textCustomTitle ?? item.title ?? null,
            text: item.textEntryDescription | striptags | truncate(160) ??? null,
            variantSize: 'md',
          },
          classes: {
            custom: ''
          }
        }, withContext = false) }}

        {# Buttons #}
        <div class="flex flex-col items-start md:group-odd:items-end space-y-4 mt-4">
          {# Link #}
          {% if item.url %}
            {{ include('_components/button/button.twig', {
              data: {
                url: item.url,
                text: 'translate.component.button.textMore' | t,
                variantStyle: 'link',
                variantSize: 'md'
              }
            }, withContext = false) }}
          {% endif %}
        </div>
      </div>

      <div class="col-span-1 order-1 md:order-2 md:group-even:order-1 ">
        {{ include('_components/image/image.twig', {
          data: {
            image: item.assetEntryImage.one() ??? item.assetImage.one() ??? null,
            aspectRatio: 'aspect-square',
            transform: 'auto',
            caption: 0,
            objectFit: 'cover',
            lazy: false
          },
          classes: {
            custom: ''
          }
        }, withContext = false) }}
      </div>
    </div>
  {% endfor %}
</div>
