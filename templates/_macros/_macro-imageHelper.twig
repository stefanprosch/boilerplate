{#
Image Helper
------------------------------------------------------------

{% import '_macros/_macro-imageHelper.twig' as image  %}
#}


{# >>> Render image #}
{%- macro renderImage(imageData = null, lazy = true, objectFit = null, customClasses = '') -%}
  {% set stdDeviation = (imageData.width / 20 * 0.5) %}
  {% set svgCode = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 #{imageData.width * 0.5} #{imageData.height * 0.5}'><filter id='b' color-interpolation-filters='sRGB'><feGaussianBlur stdDeviation='#{stdDeviation}'></feGaussianBlur><feComponentTransfer><feFuncA type='discrete' tableValues='1 1'></feFuncA></feComponentTransfer></filter><image filter='url(#b)' x='0' y='0' width='100%' height='100%' href='#{imageData.placeholder}'></image></svg>
  " %}

  {% set svgCode = 'data:image/svg+xml;charset=utf-8,' ~ svgCode | url_encode | replace({ '%2F': '/', '%3A': ':', '%3D': '=' }) %}

  {# If Image exists render it #}
  {%- if imageData ??? null -%}
    <img data-type="{{- imageData.filetype -}}"
         fetchpriority="high"
         width="{{- imageData.width -}}"
         height="{{- imageData.height -}}"
         alt="{{- imageData.alt -}}"
         title="{{- imageData.title -}}"
         sizes="100vw"

      {# >>> check if objectFit #}
      {%- if objectFit -%}
        style="object-fit: {{ objectFit }}; object-position: {{ imageData.focalpoint }}; {{ imageData.aspectRatio == 'aspect-auto' ? 'height: auto;' : 'height: 100%;' }} width: 100%;"
      {%- endif -%}

      {# >>> check if lazy #}
      {% if lazy %}
        class="lazyload {{ imageData.aspectRatio }} {{ customClasses }}"
        loading="lazy"
        decoding="async"
        src="{{- svgCode ??? imageData.placeholder -}}"
        {%- if imageData.transformable -%}
          data-srcset="{{- imageData.srcset -}}"
        {%- else -%}
          data-src="{{- imageData.url -}}"
        {%- endif -%}
        data-sizes="auto"
      {%- else -%}
        class="{{ imageData.aspectRatio }} {{ customClasses }}"
        {%- if imageData.transformable -%}
          src="{{- svgCode ??? imageData.placeholder -}}"
          srcset="{{- imageData.srcset -}}"
        {% else %}
          src="{{- imageData.url -}}"
        {% endif %}
      {% endif %}
    />
  {%- endif -%}
{%- endmacro -%}


{# >>> Render source #}
{%- macro renderSource(filetype = null, srcset = null, lazy = true, mediaQuery = null, type = 'image/avif') -%}
  {# Handle Image #}
  {%- if srcset and filetype -%}
    <source  data-type="{{- filetype -}}"
             type="{{- type -}}"

             {# >>> check if lazy #}
             {% if lazy %}
               data-sizes="auto"
               data-srcset="{{- srcset -}}"
             {% else %}
               sizes="100vw"
               srcset="{{- srcset -}}"
             {% endif %}

             {# >>> check if media query #}
             {% if mediaQuery %}
               media="{{- mediaQuery -}}"
             {% endif %}/>
  {%- endif -%}
{%- endmacro -%}
